新建一个本地文件夹，右键用终端打开
git init 初始化仓库
git status 查看分仓库状态
git remote add origin <远程仓库连接>  与远程仓库建立联系

git checkout -b <分支名> 创建新的分支，并切换到新分支
 git status
 git add . 建立与远程仓库的跟踪，添加修改内容到缓存区
git commit -m "注释" 提交修改后的文件或内容
 git push -u origin <新建的分支名>  把本地新建的分支提交到远程仓库

git branch 查看当前所在分支


之后修改内容提交到远程仓库

先查看当前所在分支：git branch(切换到与线上的分支同名的分支，这样与线上同一分支，方可进行下面的提交)
git status 查看分仓库状态
若是有内容根新，先提交到缓存去：git add .
提交，提交提交注释：git commit -m "注释"
提交到线上的分支：git push 



删除远程分支:git push origin : <分支名>    或者 
 拉取别人的分支 git pull origin <分支名>
查看项目历史版本：git reflog
返回上一个版本：git reset --hard HEAD^
返回指定版本：git reset --hard HEAD@{n}  

git fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响,本地库并没有变化，也就是说，git fetch只会将本地库所关联的远程库的commit id更新至最新



git remote   查看远程库信息

git remote -v  更加详细的查看

git remote add origin 地址  本地关联远程库

git clone  地址   克隆远程库

git branch  查看当前分支 

git branch <name>   创建分支

git checkout <name>   切换分支

git checkout -b <name>  我们创建分支，然后切换到分支

git branch -d <name>   删除分支

git branch -D <name>   强行删除

git pull origin <name>   拉取

git push origin <name>  推送


查看远程仓库 git remote -V

